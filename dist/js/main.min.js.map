{"version":3,"sources":["src/js/share.js","src/js/timer.js"],"names":["shareButtons","document","querySelectorAll","forEach","call","button","addEventListener","event","preventDefault","window","open","this","href","screen","height","width","notifier","require","path","Vue","el","data","time","initial","started","breaktime","message","ready","self","evt","ctrlKey","keyCode","pause","start","enableTimer","filters","minutesAndSeconds","minutes","Math","floor","seconds","methods","_this","beeps","Audio","interval","setInterval","showNotification","play","clearInterval","complete","notify","title","icon","join","__dirname"],"mappings":"cAGA,WAEE,IAAIA,EAAeC,SAASC,iBAAiB,gBAEzCF,GACF,GAAGG,QAAQC,KAAKJ,EAAc,SAASK,GACrCA,EAAOC,iBAAiB,QAAS,SAASC,GAGxCA,EAAMC,iBAENC,OAAOC,KAAKC,KAAKC,KAAM,eAAgB,gFAAuGC,OAAOC,OAAS,EAAIA,KAAc,UAAYD,OAAOE,MAAQ,EAAIA,UAXvN,GCCA,IAAMC,SAAWC,QAAQ,iBACnBC,KAAOD,QAAQ,QAErB,IAAIE,IAAI,CACNC,GAAI,OACJC,KAAM,CACJC,KAAM,KACNC,QAAS,KACTC,SAAS,EACTC,WAAW,EACXC,QAAS,CAAC,oBAAqB,uBAEjCC,MATM,WAUJ,IAAIC,EAAOjB,KACXF,OAAOH,iBAAiB,QAAS,SAASuB,IACxCA,EAAMA,GAAOpB,OAAOF,OACZuB,SAA0B,IAAfD,EAAIE,SACrBH,EAAKI,QAEHH,EAAIC,SAA0B,IAAfD,EAAIE,SACrBH,EAAKK,QAEHJ,EAAIC,SAA0B,IAAfD,EAAIE,SACjBH,EAAKM,gBACPN,EAAKN,KAAO,IACZM,EAAKL,QAAU,KAGfM,EAAIC,SAA0B,IAAfD,EAAIE,SACjBH,EAAKM,gBACPN,EAAKN,KAAO,IACZM,EAAKL,QAAU,KAGfM,EAAIC,SAA0B,IAAfD,EAAIE,SACjBH,EAAKM,gBACPN,EAAKN,KAAO,KACZM,EAAKL,QAAU,SAMvBY,QAAS,CACPC,kBADO,WAEL,IAAIC,EAAUC,KAAKC,MAAM5B,KAAKW,KAAO,IACjCkB,EAAU7B,KAAKW,KAAO,GAAKe,EAc/B,OAZIA,EAAU,GACZA,EAAU,IAAMC,KAAKC,MAAM5B,KAAKW,KAAO,IAClB,IAAZe,IACTA,EAAU,MAGRG,EAAU,GACZA,EAAU,KAAO7B,KAAKW,KAAO,GAAKe,GACb,IAAZG,IACTA,EAAU,MAGLH,EAAU,IAAMG,IAG3BC,QAAS,CACPR,MADO,WACC,IAAAS,EAAA/B,KACFgC,EAAQ,IAAIC,MAAM,eAEtBjC,KAAKkC,SAAWC,YAAY,WAC1BJ,EAAKpB,MAAQ,EACK,IAAdoB,EAAKpB,OAAiC,IAAnBoB,EAAKjB,WAC1BiB,EAAKlB,SAAU,EACfkB,EAAKjB,WAAY,EACjBiB,EAAKpB,KAAO,IACZoB,EAAKnB,QAAU,IACfmB,EAAKK,kBAAiB,GACtBJ,EAAMK,OACNC,cAAcP,EAAKG,WACI,IAAdH,EAAKpB,OAAiC,IAAnBoB,EAAKjB,YACjCiB,EAAKlB,SAAU,EACfkB,EAAKjB,WAAY,EACjBiB,EAAKpB,KAAO,KACZoB,EAAKnB,QAAU,KACfmB,EAAKK,kBAAiB,GACtBJ,EAAMK,OACNC,cAAcP,EAAKG,YAEpB,KACHlC,KAAKa,SAAU,GAEjBQ,MA1BO,WA2BLiB,cAActC,KAAKkC,UACnBlC,KAAKa,SAAU,GAGjBU,YA/BO,WAgCL,IAAIN,EAAOjB,KAGX,SAF4C,IAAjBiB,EAAKJ,UAAwC,IAAnBI,EAAKH,aAGxDG,EAAKF,QAAQ,GAAK,4EAClBE,EAAKmB,kBAAiB,KACtBnB,EAAKF,QAAQ,GAAK,uBAKtBqB,iBA3CO,SA2CUG,GACf,IAAIxB,EAAUwB,EAAWvC,KAAKe,QAAQ,GAAKf,KAAKe,QAAQ,GAExDV,SAASmC,OAAO,CACdC,MAAO,eACP1B,QAAS,KAAKA,EACd2B,KAAMnC,KAAKoC,KAAKC,UAAW,yBAC3BjC,KAAM","file":"main.min.js","sourcesContent":["/*eslint no-undef: \"error\"*/\n/*eslint-env browser*/\n\n(function() {\n\n  let shareButtons = document.querySelectorAll('.social_icon');\n\n  if (shareButtons) {\n    [].forEach.call(shareButtons, function(button) {\n      button.addEventListener('click', function(event) {\n        let width = 650, height = 450;\n\n        event.preventDefault();\n\n        window.open(this.href, 'Share Dialog', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,width=' + width + ',height=' + height + ',top=' + (screen.height / 2 - height / 2) + ',left=' + (screen.width / 2 - width / 2));\n      });\n    });\n  }\n\n})();\n","/*global Vue*/\n/*eslint no-undef: \"error\"*/\n/*eslint-env browser*/\n\nconst notifier = require('node-notifier');\nconst path = require('path');\n\nnew Vue({\n  el: '#app',\n  data: {\n    time: 1500,\n    initial: 1500,\n    started: false,\n    breaktime: false,\n    message: ['Pomodoro Complete', 'Breaktime Complete']\n  },\n  ready() {\n    let self = this;\n    window.addEventListener('keyup', function(evt) {\n      evt = evt || window.event;\n      if (evt.ctrlKey && evt.keyCode == 82) {\n        self.pause();\n      }\n      if (evt.ctrlKey && evt.keyCode == 83) {\n        self.start();\n      }\n      if (evt.ctrlKey && evt.keyCode == 49) {\n        if (self.enableTimer()) {\n          self.time = 300;\n          self.initial = 300;\n        }\n      }\n      if (evt.ctrlKey && evt.keyCode == 50) {\n        if (self.enableTimer()) {\n          self.time = 600;\n          self.initial = 600;\n        }\n      }\n      if (evt.ctrlKey && evt.keyCode == 51) {\n        if (self.enableTimer()) {\n          self.time = 1500;\n          self.initial = 1500;\n        }\n      }\n    });\n\n  },\n  filters: {\n    minutesAndSeconds() {\n      let minutes = Math.floor(this.time / 60);\n      let seconds = this.time - 60 * minutes;\n\n      if (minutes < 10) {\n        minutes = '0' + Math.floor(this.time / 60);\n      } else if (minutes === 0) {\n        minutes = '00';\n      }\n\n      if (seconds < 10) {\n        seconds = '0' + (this.time - 60 * minutes);\n      } else if (seconds === 0) {\n        seconds = '00';\n      }\n\n      return minutes + ':' + seconds;\n    }\n  },\n  methods: {\n    start() {\n      let beeps = new Audio('endbeep.wav');\n\n      this.interval = setInterval(() => {\n        this.time -= 1;\n        if (this.time === 0 && this.breaktime === false) {\n          this.started = false;\n          this.breaktime = true;\n          this.time = 300;\n          this.initial = 300;\n          this.showNotification(true);\n          beeps.play();\n          clearInterval(this.interval);\n        } else if (this.time === 0 && this.breaktime === true) {\n          this.started = false;\n          this.breaktime = false;\n          this.time = 1500;\n          this.initial = 1500;\n          this.showNotification(false);\n          beeps.play();\n          clearInterval(this.interval);\n        }\n      }, 1000);\n      this.started = true;\n    },\n    pause() {\n      clearInterval(this.interval);\n      this.started = false;\n    },\n\n    enableTimer() {\n      let self = this;\n      let enableToChangeTimer = (self.started === false && self.breaktime === false);\n\n      if (!enableToChangeTimer) {\n        self.message[0] = 'Impossible to change the \"timer\" while the Pomodoro or Breaktime happens!';\n        self.showNotification(true);\n        self.message[0] = 'Pomodoro Complete';\n        return false;\n      }\n      return true;\n    },\n    showNotification(complete) {\n      let message = complete ? this.message[0] : this.message[1];\n\n      notifier.notify({\n        title: 'Pomodoro App',\n        message: '\\n'+message,\n        icon: path.join(__dirname, 'pomodoro-app-icon.png'),\n        time: 3000,\n      });\n    }\n  }\n\n});\n"]}